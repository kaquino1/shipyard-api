{"version":3,"sources":["components/SideBar/SideBarItem.js","data/boat-data.js","data/cargo-data.js","data/slip-data.js","components/SideBar/SideBar.js","restService.js","components/RESTClient/APIRequestFormKeyValue.js","components/RESTClient/APIRequestBody.js","components/RESTClient/APIRequestFormTabs.js","components/RESTClient/APIRequestForm.js","components/RESTClient/APIResponseTabs.js","components/RESTClient/APIResponse.js","components/RESTClient/APIClient.js","components/ContentCards/CardSections/RequestBody.js","components/ContentCards/CardSections/RequestSection.js","components/ContentCards/CardSections/ResponseSection.js","components/ContentCards/EndPointCard.js","components/ContentCards/EndPointCardsContainer.js","components/ContentCards/AttributeCard.js","components/MainContent.js","App.js","index.js"],"names":["ListLinks","data","attrLink","links","map","entry","href","link","className","name","SideBarItem","title","useState","open","setOpen","Button","variant","onClick","icon","faAngleRight","Collapse","in","boatAttrs","attrs","boatItems","endpoint","path_params","request_headers","request_body","request_body_format","request_body_attrs","request_body_ex","type","length","response_body_format","response_statuses","response_body_ex","id","cargo","slip","owner","self","boats","label","content","total","cargoAttrs","cargoItems","volume","creationDate","carrier","slipAttrs","slipItems","boat","slips","next","SideBar","classNames","show","push","join","faGithub","updateEndTime","response","meta","time","Date","getTime","config","startTime","axios","interceptors","request","use","console","log","e","Promise","reject","restService","params","a","APIRequestFormKeyValue","onRemove","InputGroup","Form","Control","placeholder","APIRequestBody","code","setCode","as","rows","value","onKeyDown","key","preventDefault","onChange","target","APITestFormTabs","index","uuidV4","headersList","setHeadersList","onRemoveHeader","filter","item","headers","Tab","Container","defaultActiveKey","Nav","Item","Link","eventKey","Content","Pane","APIRequestForm","onResponse","Math","random","formKey","setFormKey","createParams","entries","keys","values","Object","forEach","includes","result","i","keyValuePairsToObjects","Authorization","url","method","handleSubmit","formData","FormData","currentTarget","formEntries","JSON","parse","alert","some","el","toLocaleLowerCase","toLowerCase","reply","onSubmit","Select","defaultValue","Text","required","APIRequestFormTabs","APIResponseTabs","stringify","undefined","keyName","APIResponse","status","prettyBytes","APIClient","showResponse","setShowResponse","setResponse","handleResponse","apiResponse","Card","faCaretRight","onShowResponse","BodyAttrs","row","indx","attr","RequestBody","Fragment","Params","param","Headers","RequestSection","Formats","Statuses","ResponseSection","EndPointCard","EndPointCardsContainer","Attrs","AttributeCard","MainContent","toggleSideBar","sideBar","App","props","showSideBar","setShowSideBar","Stack","direction","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95dc9a76.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Button from 'react-bootstrap/Button';\nimport Collapse from 'react-bootstrap/Collapse';\n\nconst ListLinks = ({ data, attrLink }) => {\n  const links = data.map(entry => (\n    <li key={entry.link}>\n      <a key={entry.link} href={`#${entry.link}`} className='link-dark my-1'>\n        {entry.name}\n      </a>\n    </li>\n  ));\n  return (\n    <ul className='list-links list-unstyled fw-normal pb-1'>\n      <li>\n        <a href={attrLink} className='link-dark my-1'>\n          Attributes\n        </a>\n      </li>\n      {links}\n    </ul>\n  );\n};\n\nconst SideBarItem = ({ title, data, attrLink }) => {\n  const [open, setOpen] = useState(false);\n\n  const toggleSideBarItem = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <li className='mb-1'>\n      <Button\n        variant='outline-dark'\n        className='side-bar-btn align-items-center fw-bold'\n        onClick={toggleSideBarItem}\n        aria-expanded={open}\n      >\n        <FontAwesomeIcon icon={faAngleRight} className='right-caret' />\n        <span className='mx-1'>{title}</span>\n      </Button>\n      <Collapse in={open}>\n        <div>\n          <ListLinks data={data} attrLink={attrLink} />\n        </div>\n      </Collapse>\n    </li>\n  );\n};\n\nexport default SideBarItem;\n","export const boatAttrs = {\n  name: 'Attributes',\n  link: 'boatAttrs',\n  attrs: [\n    ['Property', 'Data Type', 'Notes'],\n    [\n      'name',\n      'String',\n      \"The name of the boat.\\n May only contain alphanumeric characters, spaces, and these special characters: ':#&-.\\n Cannot be an empty string or contain only spaces.\\n Leading and trailing spaces will be removed. \\n Boat names must be unique and are case sensitive.\"\n    ],\n    [\n      'type',\n      'String',\n      \"The boat's type.\\n May only contain alphanumeric characters, spaces, and these special characters: ':#&-.\\n Cannot be an empty string or contain only spaces.\\n Leading and trailing spaces will be removed.\"\n    ],\n    ['length', 'Integer', 'The length of the boat in feet. Must be greater than 0.']\n  ]\n};\n\nexport const boatItems = [\n  {\n    link: 'postBoat',\n    name: 'Create A Boat',\n    endpoint: 'POST /boats',\n    path_params: false,\n    request_headers: ['Authorization: Bearer TOKEN', 'Accept: application/json'],\n    request_body: 'Required',\n    request_body_format: 'JSON',\n    request_body_attrs: [\n      ['Name', 'Description', 'Required?'],\n      ['name', 'The name of the boat.', 'Yes.'],\n      ['type', \"The boat's type. E.g. Sailboat, Yacht, etc.\", 'Yes.'],\n      ['length', 'The length of the boat in feet.', 'Yes.']\n    ],\n    request_body_ex: { name: 'Sea Monster', type: 'Pirate Ship', length: 50 },\n    response_body_format: ['JSON'],\n    response_statuses: [\n      ['Outcome', 'Status Code', 'Notes'],\n      ['Success', '201 Created', ''],\n      [\n        'Failure',\n        '400 Bad Request',\n        'The boat is not created if the request is missing any required attributes.\\n It is assumed that if the request contains any of the listed attributes, then the value of the attribute is valid.\\n It is assumed that the request will not contain any extraneous attributes.'\n      ],\n      ['Failure', '401 Unauthorized', 'The JWT is invalid or missing.'],\n      ['Failure', '406 Not Acceptable', 'The server only returns application/json data.']\n    ],\n    response_body_ex: {\n      id: 123,\n      name: 'Sea Monster',\n      type: 'Pirate Ship',\n      length: 50,\n      cargo: [],\n      slip: null,\n      owner: 'auth|5566',\n      self: 'https://URL.com/boats/123'\n    }\n  },\n  {\n    link: 'getAllBoats',\n    name: 'View All Boats',\n    endpoint: 'GET /boats',\n    path_params: false,\n    request_headers: ['Authorization: Bearer TOKEN', 'Accept: application/json'],\n    request_body: false,\n    response_body_format: ['JSON'],\n    response_statuses: [\n      ['Outcome', 'Status Code', 'Notes'],\n      ['Success', '200 OK', ''],\n      ['Failure', '401 Unauthorized', 'The JWT is invalid or missing.'],\n      ['Failure', '406 Not Acceptable', 'The server only returns application/json data.']\n    ],\n    response_body_ex: {\n      boats: [\n        {\n          id: 123,\n          name: 'Sea Monster',\n          type: 'Pirate Ship',\n          length: 50,\n          cargo: [],\n          slip: null,\n          owner: 'auth|5566',\n          self: 'https://URL.com/boats/123'\n        },\n        {\n          id: 234,\n          name: 'Knot for Sail',\n          type: 'Sailboat',\n          length: 20,\n          cargo: [],\n          slip: { id: 9944, label: 'A97', self: 'https://URL.com/slips/9944' },\n          owner: 'auth|5566',\n          self: 'https://URL.com/boats/234'\n        },\n        {\n          id: 345,\n          name: 'Get Reel',\n          type: 'Yacht',\n          length: 60,\n          cargo: [{ id: 1122, content: 'birthday hats', self: 'https://URL.com/cargo/1122' }],\n          slip: null,\n          owner: 'auth|5566',\n          self: 'https://URL.com/boats/345'\n        }\n      ],\n      total: 3\n    }\n  },\n  {\n    link: 'getOneBoat',\n    name: 'View a Boat',\n    endpoint: 'GET /boats/:boat_id',\n    path_params: [\n      ['Name', 'Description'],\n      ['boat_id', 'The id of the boat.']\n    ],\n    request_headers: ['Authorization: Bearer TOKEN', 'Accept: application/json'],\n    request_body: false,\n    response_body_format: ['JSON'],\n    response_statuses: [\n      ['Outcome', 'Status Code', 'Notes'],\n      ['Success', '200 OK', ''],\n      ['Failure', '401 Unauthorized', 'The JWT is invalid or missing.'],\n      ['Failure', '403 Forbidden', 'The boat is owned by another user or it does not exist.'],\n      ['Failure', '406 Not Acceptable', 'The server only returns application/json data.']\n    ],\n    response_body_ex: {\n      id: 345,\n      name: 'Get Reel',\n      type: 'Yacht',\n      length: 60,\n      cargo: [{ id: 1122, content: 'birthday hats', self: 'https://URL.com/cargo/1122' }],\n      slip: null,\n      owner: 'auth|5566',\n      self: 'https://URL.com/boats/345'\n    }\n  },\n  {\n    link: 'deleteOneBoat',\n    name: 'Delete a Boat',\n    endpoint: 'DELETE /boats/:boat_id',\n    path_params: [\n      ['Name', 'Description'],\n      ['boat_id', 'The id of the boat.']\n    ],\n    request_headers: ['Authorization: Bearer TOKEN'],\n    request_body: false,\n    response_body_format: [false, 'JSON'],\n    response_statuses: [\n      ['Outcome', 'Status Code', 'Notes'],\n      ['Success', '204 No Content', ''],\n      ['Failure', '401 Unauthorized', 'The JWT is invalid or missing.'],\n      ['Failure', '403 Forbidden', 'The boat is owned by another user or it does not exist.']\n    ]\n  },\n  {\n    link: 'putOneBoat',\n    name: 'Edit a Boat - PUT',\n    endpoint: 'PUT /boats/:boat_id',\n    path_params: [\n      ['Name', 'Description'],\n      ['boat_id', 'The id of the boat.']\n    ],\n    request_headers: ['Authorization: Bearer TOKEN', 'Accept: application/json'],\n    request_body: 'Required',\n    request_body_format: 'JSON',\n    request_body_attrs: [\n      ['Name', 'Description', 'Required?'],\n      ['name', 'The name of the boat.', 'No.'],\n      ['type', \"The boat's type. E.g. Sailboat, Yacht, etc.\", 'No.'],\n      ['length', 'The length of the boat in feet.', 'No.']\n    ],\n    request_body_ex: { name: 'Vitamin Sea', type: 'Catamaran', length: 50 },\n    response_body_format: ['JSON'],\n    response_statuses: [\n      ['Outcome', 'Status Code', 'Notes'],\n      ['Success', '200 OK', ''],\n      ['Failure', '400 Bad Request', 'The request object is missing at least one of the required attributes.'],\n      ['Failure', '401 Unauthorized', 'The JWT is invalid or missing.'],\n      ['Failure', '403 Forbidden', 'The boat is owned by another user or it does not exist.'],\n      ['Failure', '406 Not Acceptable', 'The server only returns application/json data.']\n    ],\n    response_body_ex: {\n      id: 123,\n      name: 'Vitamin Sea',\n      type: 'Catamaran',\n      length: 50,\n      cargo: [],\n      slip: null,\n      owner: 'auth|5566',\n      self: 'https://URL.com/boats/123'\n    }\n  },\n  {\n    link: 'patchOneBoat',\n    name: 'Edit a Boat - PATCH',\n    endpoint: 'PATCH /boats/:boat_id',\n    path_params: [\n      ['Name', 'Description'],\n      ['boat_id', 'The id of the boat.']\n    ],\n    request_headers: ['Authorization: Bearer TOKEN', 'Accept: application/json'],\n    request_body: 'Required',\n    request_body_format: 'JSON',\n    request_body_attrs: [\n      ['Name', 'Description', 'Required?'],\n      ['name', 'The name of the boat.', 'Yes.'],\n      ['type', \"The boat's type. E.g. Sailboat, Yacht, etc.\", 'Yes.'],\n      ['length', 'The length of the boat in feet.', 'Yes.']\n    ],\n    request_body_ex: { name: 'Sea Monster' },\n    response_body_format: ['JSON'],\n    response_statuses: [\n      ['Outcome', 'Status Code', 'Notes'],\n      ['Success', '200 OK', ''],\n      ['Failure', '400 Bad Request', 'The request object is empty.'],\n      ['Failure', '401 Unauthorized', 'The JWT is invalid or missing.'],\n      ['Failure', '403 Forbidden', 'The boat is owned by another user or it does not exist.'],\n      ['Failure', '406 Not Acceptable', 'The server only returns application/json data.']\n    ],\n    response_body_ex: {\n      id: 123,\n      name: 'Sea Monster',\n      type: 'Catamaran',\n      length: 50,\n      cargo: [],\n      slip: null,\n      owner: 'auth|5566',\n      self: 'https://URL.com/boats/123'\n    }\n  },\n  {\n    link: 'addCargoBoat',\n    name: 'Add Cargo to Boat',\n    endpoint: 'PATCH /boats/:boat_id/cargo/:cargo_id',\n    path_params: [\n      ['Name', 'Description'],\n      ['boat_id', 'The id of the boat.'],\n      ['cargo_id', 'The id of the cargo load.']\n    ],\n    request_headers: ['Authorization: Bearer TOKEN', 'Accept: application/json'],\n    request_body: false,\n    response_body_format: [false, 'JSON'],\n    response_statuses: [\n      ['Outcome', 'Status Code', 'Notes'],\n      ['Success', '204 No Content', ''],\n      ['Failure', '401 Unauthorized', 'The JWT is invalid or missing.'],\n      [\n        'Failure',\n        '403 Forbidden',\n        'The cargo is already assigned to a boat. OR\\n  The boat and/or cargo is owned by another user or does not exist.'\n      ]\n    ]\n  },\n  {\n    link: 'removeCargoBoat',\n    name: 'Remove Cargo from Boat',\n    endpoint: 'DELETE /boats/:boat_id/cargo/:cargo_id',\n    path_params: [\n      ['Name', 'Description'],\n      ['boat_id', 'The id of the boat.'],\n      ['cargo_id', 'The id of the cargo load.']\n    ],\n    request_headers: ['Authorization: Bearer TOKEN', 'Accept: application/json'],\n    request_body: false,\n    response_body_format: [false, 'JSON'],\n    response_statuses: [\n      ['Outcome', 'Status Code', 'Notes'],\n      ['Success', '204 No Content', ''],\n      ['Failure', '401 Unauthorized', 'The JWT is invalid or missing.'],\n      [\n        'Failure',\n        '403 Forbidden',\n        'The specified cargo is not assigned to the specified boat. OR\\n The boat and/or cargo is owned by another user or does not exist.'\n      ]\n    ]\n  },\n  {\n    link: 'dockBoatSlip',\n    name: 'Dock Boat at Slip',\n    endpoint: 'PATCH /boats/:boat_id/slips/:slip_id',\n    path_params: [\n      ['Name', 'Description'],\n      ['boat_id', 'The id of the boat.'],\n      ['slip_id', 'The id of the slip.']\n    ],\n    request_headers: ['Authorization: Bearer TOKEN', 'Accept: application/json'],\n    request_body: false,\n    response_body_format: [false, 'JSON'],\n    response_statuses: [\n      ['Outcome', 'Status Code', 'Notes'],\n      ['Success', '204 No Content', ''],\n      ['Failure', '401 Unauthorized', 'The JWT is invalid or missing.'],\n      [\n        'Failure',\n        '403 Forbidden',\n        'The slip is already occcupied. OR\\n The boat is already docked. OR\\n The boat is larger than the slip. OR\\n The boat is owned by another user or the boat and/or slip does not exist.'\n      ]\n    ]\n  },\n  {\n    link: 'undockBoatSlip',\n    name: 'Undock Boat from Slip',\n    endpoint: 'DELETE /boats/:boat_id/slips/:slip_id',\n    path_params: [\n      ['Name', 'Description'],\n      ['boat_id', 'The id of the boat.'],\n      ['slip_id', 'The id of the slip.']\n    ],\n    request_headers: ['Authorization: Bearer TOKEN', 'Accept: application/json'],\n    request_body: false,\n    response_body_format: [false, 'JSON'],\n    response_statuses: [\n      ['Outcome', 'Status Code', 'Notes'],\n      ['Success', '204 No Content', ''],\n      ['Failure', '401 Unauthorized', 'The JWT is invalid or missing.'],\n      [\n        'Failure',\n        '403 Forbidden',\n        'The specified boat is not docked at the specified slip. OR\\n The boat is owned by another user or the boat and/or slip does not exist.'\n      ]\n    ]\n  }\n];\n","export const cargoAttrs = {\n  name: 'Attributes',\n  link: 'cargoAttrs',\n  attrs: [\n    ['Property', 'Data Type', 'Notes'],\n    [\n      'content',\n      'String',\n      \"The cargo's content.\\n May only contain alphanumeric characters, spaces, and these special characters: ':#&-.\\n Cannot be an empty string or contain only spaces.\\n Leading and trailing spaces will be removed.\"\n    ],\n    ['volume', 'Integer', 'The volume of the cargo in cubic feet. Must be greater than 0.']\n  ]\n};\n\nexport const cargoItems = [\n  {\n    link: 'postCargo',\n    name: 'Create a Cargo Load',\n    endpoint: 'POST /cargo',\n    path_params: false,\n    request_headers: ['Authorization: Bearer TOKEN', 'Accept: application/json'],\n    request_body: 'Required',\n    request_body_format: 'JSON',\n    request_body_attrs: [\n      ['Name', 'Description', 'Required?'],\n      ['content', \"The cargo's content.\", 'Yes.'],\n      ['volume', 'The volume of the cargo in cubic feet.', 'Yes.']\n    ],\n    request_body_ex: { content: 'birthday hats', volume: 20 },\n    response_body_format: ['JSON'],\n    response_statuses: [\n      ['Outcome', 'Status Code', 'Notes'],\n      ['Success', '201 Created', ''],\n      [\n        'Failure',\n        '400 Bad Request',\n        'The request object is missing at least one of the required attributes. OR\\n The request object contains extraneous attributes. OR\\n One or more request object attributes are the wrong type. OR\\n The cargo volume is not positive and/or the cargo content contains forbidden characters.'\n      ],\n      ['Failure', '401 Unauthorized', 'The JWT is invalid or missing.'],\n      ['Failure', '406 Not Acceptable', 'The server only returns application/json data.']\n    ],\n    response_body_ex: {\n      id: 1122,\n      content: 'birthday hats',\n      volume: 20,\n      creationDate: '2021-12-05',\n      carrier: null,\n      self: 'https://URL.com/cargo/122'\n    }\n  },\n  {\n    link: 'getAllCargo',\n    name: 'View All Cargo Loads',\n    endpoint: 'GET /cargo',\n    path_params: false,\n    request_headers: ['Authorization: Bearer TOKEN', 'Accept: application/json'],\n    request_body: false,\n    response_body_format: ['JSON'],\n    response_statuses: [\n      ['Outcome', 'Status Code', 'Notes'],\n      ['Success', '200 OK', ''],\n      ['Failure', '401 Unauthorized', 'The JWT is invalid or missing.'],\n      ['Failure', '406 Not Acceptable', 'The server only returns application/json data.']\n    ],\n    response_body_ex: {\n      cargo: [\n        {\n          id: 1122,\n          content: 'birthday hats',\n          volume: 20,\n          creationDate: '2021-12-05',\n          carrier: { id: 345, name: 'Get Reel', self: 'https://URL.com/boats/345' },\n          self: 'https://URL.com/cargo/122'\n        },\n        {\n          id: 2233,\n          content: 'jumbo sombreros',\n          volume: 10,\n          creationDate: '2021-11-23',\n          carrier: null,\n          self: 'https://URL.com/cargo/2233'\n        },\n        {\n          id: 6677,\n          content: 'ugly Christmas sweaters',\n          volume: 44,\n          creationDate: '2021-12-15',\n          carrier: null,\n          self: 'https://URL.com/cargo/6677'\n        },\n        {\n          id: 7788,\n          content: 'red M&Ms',\n          volume: 50,\n          creationDate: '2021-11-16',\n          carrier: null,\n          self: 'https://URL.com/cargo/7788'\n        }\n      ],\n      total: 4\n    }\n  },\n  {\n    link: 'getOneCargo',\n    name: 'View a Cargo Load',\n    endpoint: 'GET /cargo/:cargo_id',\n    path_params: [\n      ['Name', 'Description'],\n      ['cargo_id', 'The id of the cargo load.']\n    ],\n    request_headers: ['Authorization: Bearer TOKEN', 'Accept: application/json'],\n    request_body: false,\n    response_body_format: ['JSON'],\n    response_statuses: [\n      ['Outcome', 'Status Code', 'Notes'],\n      ['Success', '200 OK', ''],\n      ['Failure', '401 Unauthorized', 'The JWT is invalid or missing.'],\n      ['Failure', '403 Forbidden', 'The cargo load is owned by another user or it does not exist.'],\n      ['Failure', '406 Not Acceptable', 'The server only returns application/json data.']\n    ],\n    response_body_ex: {\n      id: 1122,\n      content: 'birthday hats',\n      volume: 20,\n      creationDate: '2021-12-05',\n      carrier: { id: 345, name: 'Get Reel', self: 'https://URL.com/boats/345' },\n      self: 'https://URL.com/cargo/122'\n    }\n  },\n  {\n    link: 'deleteOneCargo',\n    name: 'Delete a Cargo Load',\n    endpoint: 'DELETE /cargo/:cargo_id',\n    path_params: [\n      ['Name', 'Description'],\n      ['cargo_id', 'The id of the cargo load.']\n    ],\n    request_headers: ['Authorization: Bearer TOKEN'],\n    request_body: false,\n    response_body_format: [false, 'JSON'],\n    response_statuses: [\n      ['Outcome', 'Status Code', 'Notes'],\n      ['Success', '204 No Content', ''],\n      ['Failure', '401 Unauthorized', 'The JWT is invalid or missing.'],\n      ['Failure', '403 Forbidden', 'The cargo load is owned by another user or it does not exist.']\n    ]\n  },\n  {\n    link: 'putOneCargo',\n    name: 'Edit a Cargo Load - PUT',\n    endpoint: 'PUT /cargo/:cargo_id',\n    path_params: [\n      ['Name', 'Description'],\n      ['cargo_id', 'The id of the cargo load.']\n    ],\n    request_headers: ['Authorization: Bearer TOKEN', 'Accept: application/json'],\n    request_body: 'Required',\n    request_body_format: 'JSON',\n    request_body_attrs: [\n      ['Name', 'Description', 'Required?'],\n      ['content', \"The cargo's content.\", 'Yes.'],\n      ['volume', 'The volume of the cargo in cubic feet.', 'Yes.']\n    ],\n    request_body_ex: { content: 'kazoos', volume: 31 },\n    response_body_format: ['JSON'],\n    response_statuses: [\n      ['Outcome', 'Status Code', 'Notes'],\n      ['Success', '200 OK', ''],\n      [\n        'Failure',\n        '400 Bad Request',\n        'The request object is missing at least one of the required attributes. OR\\n The request object contains extraneous attributes. OR\\n One or more request object attributes are the wrong type. OR\\n The cargo volume is not positive and/or the cargo content contains forbidden characters.'\n      ],\n      ['Failure', '401 Unauthorized', 'The JWT is invalid or missing.'],\n      ['Failure', '403 Forbidden', 'The cargo load is owned by another user or it does not exist.'],\n      ['Failure', '406 Not Acceptable', 'The server only returns application/json data.']\n    ],\n    response_body_ex: {\n      id: 1122,\n      content: 'kazoos',\n      volume: 31,\n      creationDate: '2021-12-05',\n      carrier: null,\n      self: 'https://URL.com/cargo/122'\n    }\n  },\n  {\n    link: 'patchOneCargo',\n    name: 'Edit a Cargo Load - PATCH',\n    endpoint: 'PATCH /cargo/:cargo_id',\n    path_params: [\n      ['Name', 'Description'],\n      ['cargo_id', 'The id of the cargo load.']\n    ],\n    request_headers: ['Authorization: Bearer TOKEN', 'Accept: application/json'],\n    request_body: 'Required',\n    request_body_format: 'JSON',\n    request_body_attrs: [\n      ['Name', 'Description', 'Required?'],\n      ['content', \"The cargo's content.\", 'No.'],\n      ['volume', 'The volume of the cargo in cubic feet.', 'No.']\n    ],\n    request_body_ex: { volume: 41 },\n    response_body_format: ['JSON'],\n    response_statuses: [\n      ['Outcome', 'Status Code', 'Notes'],\n      ['Success', '200 OK', ''],\n      [\n        'Failure',\n        '400 Bad Request',\n        'The request object is empty. OR\\n The request object contains extraneous attributes. OR\\n One or more request object attributes are the wrong type. OR\\n The cargo volume is not positive and/or the cargo content contains forbidden characters.'\n      ],\n      ['Failure', '401 Unauthorized', 'The JWT is invalid or missing.'],\n      ['Failure', '403 Forbidden', 'The cargo load is owned by another user or it does not exist.'],\n      ['Failure', '406 Not Acceptable', 'The server only returns application/json data.']\n    ],\n    response_body_ex: {\n      id: 1122,\n      content: 'kazoos',\n      volume: 41,\n      creationDate: '2021-12-05',\n      carrier: null,\n      self: 'https://URL.com/cargo/122'\n    }\n  }\n];\n\nexport default cargoItems;\n","export const slipAttrs = {\n  name: 'Attributes',\n  link: 'slipAttrs',\n  attrs: [\n    ['Property', 'Data Type', 'Notes'],\n    [\n      'label',\n      'String',\n      \"The slip's idenifying label.\\n May only contain alphanumeric characters, spaces, and these special characters: ':#&-.\\n Cannot be an empty string or contain only spaces.\\n Leading and trailing spaces will be removed and labels will be stored in uppercase characters.\\n Slip labels must be unique and are case insensitive.\"\n    ],\n    ['length', 'Integer', 'The length of the slip in feet. Must be greater than 0.']\n  ]\n};\n\nexport const slipItems = [\n  {\n    link: 'postSlips',\n    name: 'Create a Slip',\n    endpoint: 'POST /slips',\n    path_params: false,\n    request_headers: ['Accept: application/json'],\n    request_body: 'Required',\n    request_body_format: 'JSON',\n    request_body_attrs: [\n      ['Name', 'Description', 'Required?'],\n      ['label', \"The slip's idenifying label.\", 'Yes.'],\n      ['length', 'The length of the slip in feet.', 'Yes.']\n    ],\n    request_body_ex: { label: 'A97', length: 45 },\n    response_body_format: ['JSON'],\n    response_statuses: [\n      ['Outcome', 'Status Code', 'Notes'],\n      ['Success', '201 Created', ''],\n      [\n        'Failure',\n        '400 Bad Request',\n        'The request object is missing at least one of the required attributes. OR\\n The request object contains extraneous attributes. OR\\n One or more request object attributes are the wrong type. OR\\n The slip length is not positive and/or the slip label contains forbidden characters.'\n      ],\n      ['Failure', '403 Forbidden', 'A slip with this label already exists.'],\n      ['Failure', '406 Not Acceptable', 'The server only returns application/json data.']\n    ],\n    response_body_ex: { id: 9944, label: 'A97', length: 45, boat: null, self: 'https://URL.com/slips/9944' }\n  },\n  {\n    link: 'getAllSlips',\n    name: 'View All Slips',\n    endpoint: 'GET /slips',\n    path_params: false,\n    request_headers: ['Accept: application/json'],\n    request_body: false,\n    response_body_format: ['JSON'],\n    response_statuses: [\n      ['Outcome', 'Status Code', 'Notes'],\n      ['Success', '200 OK', ''],\n      ['Failure', '406 Not Acceptable', 'The server only returns application/json data.']\n    ],\n    response_body_ex: {\n      slips: [\n        {\n          id: 9944,\n          label: 'A97',\n          length: 45,\n          boat: { id: 234, name: 'Knot for Sail', self: 'https://URL.com/boats/234' },\n          self: 'https://URL.com/slips/9944'\n        },\n        { id: 5511, label: 'B12', length: 20, boat: null, self: 'https://URL.com/slips/5511' },\n        { id: 7744, label: 'C52', length: 50, boat: null, self: 'https://URL.com/slips/7744' },\n        { id: 8855, label: 'A13', length: 100, boat: null, self: 'https://URL.com/slips/8855' },\n        { id: 4411, label: 'B6', length: 33, boat: null, self: 'https://URL.com/slips/4411' }\n      ],\n      next: 'https://URL.com/slips/?cursor=Ci0SJHAgJjm%2BpkK%3D',\n      total: 6\n    }\n  },\n  {\n    link: 'getOneSlip',\n    name: 'View a Slip',\n    endpoint: 'GET /slips/:slip_id',\n    path_params: [\n      ['Name', 'Description'],\n      ['slip_id', 'The id of the slip.']\n    ],\n    request_headers: ['Accept: application/json'],\n    request_body: false,\n    response_body_format: ['JSON'],\n    response_statuses: [\n      ['Outcome', 'Status Code', 'Notes'],\n      ['Success', '200 OK', ''],\n      ['Failure', '403 Forbidden', 'No slip with this slip_id exists.'],\n      ['Failure', '406 Not Acceptable', 'The server only returns application/json data.']\n    ],\n    response_body_ex: {\n      id: 9944,\n      label: 'A97',\n      length: 45,\n      boat: { id: 234, name: 'Knot for Sail', self: 'https://URL.com/boats/234' },\n      self: 'https://URL.com/slips/9944'\n    }\n  },\n  {\n    link: 'deleteOneSlip',\n    name: 'Delete a Slip',\n    endpoint: 'DELETE /slips/:slip_id',\n    path_params: [\n      ['Name', 'Description'],\n      ['slip_id', 'The id of the slip.']\n    ],\n    request_headers: [],\n    request_body: false,\n    response_body_format: [false, 'JSON'],\n    response_statuses: [\n      ['Outcome', 'Status Code', 'Notes'],\n      ['Success', '204 No Content', ''],\n      ['Failure', '403 Forbidden', 'No slip with this slip_id exists.']\n    ]\n  },\n  {\n    link: 'putOneSlip',\n    name: 'Edit a Slip - PUT',\n    endpoint: 'PUT /slips/:slip_id',\n    path_params: [\n      ['Name', 'Description'],\n      ['slip_id', 'The id of the slip.']\n    ],\n    request_headers: ['Accept: application/json'],\n    request_body: 'Required',\n    request_body_format: 'JSON',\n    request_body_attrs: [\n      ['Name', 'Description', 'Required?'],\n      ['label', \"The slip's idenifying label.\", 'Yes.'],\n      ['length', 'The length of the slip in feet.', 'Yes.']\n    ],\n    request_body_ex: { label: 'A86', length: 44 },\n    response_body_format: ['JSON'],\n    response_statuses: [\n      ['Outcome', 'Status Code', 'Notes'],\n      ['Success', '200 OK', ''],\n      [\n        'Failure',\n        '400 Bad Request',\n        'The request object is missing at least one of the required attributes. OR\\n The request object contains extraneous attributes. OR\\n One or more request object attributes are the wrong type. OR\\n The slip length is not positive and/or the slip label contains forbidden characters.'\n      ],\n      ['Failure', '403 Forbidden', 'No slip with this slip_id exists. OR\\n A slip with this label already exists.'],\n      ['Failure', '406 Not Acceptable', 'The server only returns application/json data.']\n    ],\n    response_body_ex: { id: 9944, label: 'A86', length: 44, boat: null, self: 'https://URL.com/slips/9944' }\n  },\n  {\n    link: 'patchOneSlip',\n    name: 'Edit a Slip - PATCH',\n    endpoint: 'PATCH /slips/:slip_id',\n    path_params: [\n      ['Name', 'Description'],\n      ['slip_id', 'The id of the slip.']\n    ],\n    request_headers: ['Accept: application/json'],\n    request_body: 'Required',\n    request_body_format: 'JSON',\n    request_body_attrs: [\n      ['Name', 'Description', 'Required?'],\n      ['label', \"The slip's idenifying label.\", 'No.'],\n      ['length', 'The length of the slip in feet.', 'No.']\n    ],\n    request_body_ex: { length: 46 },\n    response_body_format: ['JSON'],\n    response_statuses: [\n      ['Outcome', 'Status Code', 'Notes'],\n      ['Success', '200 OK', ''],\n      [\n        'Failure',\n        '400 Bad Request',\n        'The request object is empty. OR\\n The request object contains extraneous attributes. OR\\n One or more request object attributes are the wrong type. OR\\n The slip length is not positive and/or the slip label contains forbidden characters.'\n      ],\n      ['Failure', '403 Forbidden', 'No slip with this slip_id exists. OR\\n A slip with this label already exists.'],\n      ['Failure', '406 Not Acceptable', 'The server only returns application/json data.']\n    ],\n    response_body_ex: { id: 9944, label: 'A86', length: 46, boat: null, self: 'https://URL.com/slips/9944' }\n  }\n];\n","import { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport SideBarItem from './SideBarItem';\nimport { boatItems } from '../../data/boat-data';\nimport { cargoItems } from '../../data/cargo-data';\nimport { slipItems } from '../../data/slip-data';\n\nconst SideBar = ({ show }) => {\n  const classNames = ['bg-white', 'd-flex', 'flex-column'];\n  if (!show) {\n    classNames.push('hidden');\n  }\n  return (\n    <div id='side-bar' className={classNames.join(' ')}>\n      <div className='text-center pt-2 pb-4 border-bottom'>\n        <a href='#home' id='sidebarTitle' className='my-1'>\n          Shipyard API\n        </a>\n      </div>\n\n      <ul className='list-unstyled ps-0 mb-auto py-2'>\n        <SideBarItem title='Boats' data={boatItems} attrLink='#boatAttrs' />\n        <SideBarItem title='Cargo' data={cargoItems} attrLink='#cargoAttrs' />\n        <SideBarItem title='Slips' data={slipItems} attrLink='#slipAttrs' />\n      </ul>\n\n      <div className='d-flex justify-content-evenly pt-4 border-top'>\n        <div className=''>\n          <FontAwesomeIcon icon={faGithub} className='mx-2 github-icon' />\n          <a href='https://github.com/kaquino1/shipyard-rest-api' className='my-1 github-link'>\n            API\n          </a>\n        </div>\n        <div>\n          <FontAwesomeIcon icon={faGithub} className='mx-2 github-icon' />\n          <a href='https://github.com/kaquino1/shipyard-rest-api/tree/spec' className='my-1 github-link'>\n            Docs\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SideBar;\n","import axios from 'axios';\n\nconst updateEndTime = response => {\n  response.meta = response.meta || {};\n  response.meta.time = new Date().getTime() - response.config.meta.startTime;\n  return response;\n};\n\naxios.interceptors.request.use(request => {\n  console.log(request);\n  request.meta = request.meta || {};\n  request.meta.startTime = new Date().getTime();\n  return request;\n});\n\naxios.interceptors.response.use(updateEndTime, e => {\n  return Promise.reject(updateEndTime(e.response));\n});\n\nconst restService = async params => {\n  try {\n    const response = await axios(params);\n    return response;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport default restService;\n","import InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nconst APIRequestFormKeyValue = ({ name, onRemove }) => {\n  return (\n    <InputGroup data-key-value-pair className='my-2'>\n      <Form.Control data-key type='text' placeholder='Key' name={`data-key-${name}`} />\n      <Form.Control data-value type='text' placeholder='Value' name={`data-value-${name}`} />\n      <Button name={name} variant='outline-danger' type='button' onClick={onRemove}>\n        Remove\n      </Button>\n    </InputGroup>\n  );\n};\n\nexport default APIRequestFormKeyValue;\n","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\n\nconst APIRequestBody = () => {\n  const [code, setCode] = useState('{\\n\\n}');\n\n  const handleTab = e => {\n    if (e.key === 'Tab') {\n      e.preventDefault();\n    }\n  };\n\n  return (\n    <Form.Control\n      as='textarea'\n      name='data-request-json'\n      id='data-request-json'\n      rows={5}\n      value={code}\n      onKeyDown={handleTab}\n      onChange={e => setCode(e.target.value)}\n    />\n  );\n};\n\nexport default APIRequestBody;\n","import React, { useState } from 'react';\nimport { v4 as uuidV4 } from 'uuid';\nimport Nav from 'react-bootstrap/Nav';\nimport Tab from 'react-bootstrap/Tab';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport APIRequestFormKeyValue from './APIRequestFormKeyValue';\nimport APIRequestBody from './APIRequestBody';\n\nconst APITestFormTabs = () => {\n  const [headersList, setHeadersList] = useState([{ index: uuidV4() }]);\n\n  const onRemoveHeader = e => {\n    const index = e.target.name;\n    setHeadersList(headersList.filter(item => item.index !== index));\n  };\n\n  const headers = headersList.map(item => (\n    <APIRequestFormKeyValue key={item.index} name={item.index} onRemove={onRemoveHeader} />\n  ));\n\n  const onAddHeader = () => {\n    setHeadersList([...headersList, { index: uuidV4() }]);\n  };\n\n  return (\n    <Tab.Container defaultActiveKey='token'>\n      <Nav variant='tabs'>\n        <Nav.Item>\n          <Nav.Link eventKey='token'>Authorization Token</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link eventKey='request-headers'>Headers</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link eventKey='json'>JSON</Nav.Link>\n        </Nav.Item>\n      </Nav>\n\n      <Tab.Content className='p-3 border-top-0 border'>\n        <Tab.Pane eventKey='token'>\n          <div id='token'>\n            <div id='data-token'>\n              <Form.Control name='data-token' placeholder='Token' className='my-2' />\n            </div>\n          </div>\n        </Tab.Pane>\n        <Tab.Pane eventKey='request-headers'>\n          <div id='request-headers'>\n            <div id='data-request-headers'>{headers}</div>\n            <Button\n              id='data-add-request-header-btn'\n              variant='outline-success'\n              className='mt-2'\n              type='button'\n              onClick={onAddHeader}\n            >\n              Add\n            </Button>\n          </div>\n        </Tab.Pane>\n        <Tab.Pane eventKey='json'>\n          <div id='json'>\n            <div id='data-json-request-body' className='overflow-auto'>\n              <APIRequestBody />\n            </div>\n          </div>\n        </Tab.Pane>\n      </Tab.Content>\n    </Tab.Container>\n  );\n};\n\nexport default APITestFormTabs;\n","import React, { useState } from 'react';\nimport restService from '../../restService';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport APIRequestFormTabs from './APIRequestFormTabs';\n\nconst APIRequestForm = ({ onResponse }) => {\n  const [formKey, setFormKey] = useState(Math.random());\n\n  const keyValuePairsToObjects = entries => {\n    const keys = [];\n    const values = [];\n    Object.keys(entries).forEach(label => {\n      if (label.includes('data-key-')) {\n        keys.push(label);\n      }\n      if (label.includes('data-value-')) {\n        values.push(label);\n      }\n    });\n    const result = {};\n    keys.forEach((key, i) => (result[entries[key]] = entries[values[i]]));\n    return result;\n  };\n\n  const createParams = (entries, data) => {\n    let headers = keyValuePairsToObjects(entries);\n    if (entries['data-token']) {\n      headers = { ...headers, Authorization: `Bearer ${entries['data-token']}` };\n    }\n    return {\n      url: `https://shipyard-rest-api.uk.r.appspot.com${entries['data-url']}`,\n      method: entries['data-method'],\n      headers: headers,\n      data\n    };\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n    const formEntries = {};\n    let data;\n    for (const [key, value] of formData.entries()) {\n      if (key === 'data-request-json') {\n        try {\n          data = JSON.parse(value || null);\n        } catch (e) {\n          alert('JSON data is malformed');\n          return;\n        }\n      }\n      if (value) {\n        if (\n          key === 'data-url' &&\n          ['login', 'callback', 'userinfo'].some(el => value.toLocaleLowerCase().includes(el))\n        ) {\n          formEntries[key] = '/error';\n        } else if (key === 'data-token') {\n          formEntries[key] = value;\n        } else {\n          formEntries[key] = value.toLowerCase();\n        }\n      }\n    }\n    setFormKey(Math.random());\n    const params = createParams(formEntries, data);\n    const reply = await restService(params);\n    onResponse(reply);\n  };\n\n  return (\n    <Form key={formKey} className='mt-4' onSubmit={handleSubmit}>\n      <InputGroup className='mb-4'>\n        <Form.Select className='flex-grow-0 w-auto' defaultValue={'GET'} name='data-method'>\n          <option value='GET'>GET</option>\n          <option value='POST'>POST</option>\n          <option value='PUT'>PUT</option>\n          <option value='PATCH'>PATCH</option>\n          <option value='DELETE'>DELETE</option>\n        </Form.Select>\n        <InputGroup.Text>https://shipyard-rest-api.uk.r.appspot.com</InputGroup.Text>\n        <Form.Control required name='data-url' placeholder='/slips' />\n        <Button as='input' type='submit' variant='secondary' value='Send' />\n      </InputGroup>\n      <APIRequestFormTabs />\n    </Form>\n  );\n};\n\nexport default APIRequestForm;\n","import Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\n\nconst APIResponseTabs = ({ response }) => {\n  if (!response) {\n    return;\n  }\n\n  return (\n    <Tab.Container defaultActiveKey='response-json'>\n      <Nav variant='tabs'>\n        <Nav.Item>\n          <Nav.Link eventKey='response-json'>JSON</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link eventKey='response-headers'>Headers</Nav.Link>\n        </Nav.Item>\n      </Nav>\n\n      <Tab.Content className='p-3 border-top-0 border'>\n        <Tab.Pane eventKey='response-json'>\n          <div id='data-response-json'>\n            <div id='data-json-response-body' className='overflow-auto'>\n              {response.data && (\n                <pre>\n                  <code>{JSON.stringify(response.data, undefined, 4)}</code>\n                </pre>\n              )}\n            </div>\n          </div>\n        </Tab.Pane>\n        <Tab.Pane eventKey='response-headers'>\n          {response && (\n            <div id='response-headers'>\n              {Object.keys(response.headers).map((keyName, i) => (\n                <div className='row' key={i}>\n                  <div className='col-2 py-1'>{keyName}:</div>\n                  <div className='col-3 py-1'>{response.headers[keyName]}</div>\n                </div>\n              ))}\n            </div>\n          )}\n        </Tab.Pane>\n      </Tab.Content>\n    </Tab.Container>\n  );\n};\n\nexport default APIResponseTabs;\n","import prettyBytes from 'pretty-bytes';\nimport APIResponseTabs from './APIResponseTabs';\n\nconst APIResponse = ({ response }) => {\n  if (!response) return null;\n  return (\n    <div className='mt-4 '>\n      <div className='fs-4'>Response</div>\n      <div className='d-flex mt-2 mb-4'>\n        <div className='me-3'>\n          Status:{' '}\n          <span id='data-status' className={response.status >= 400 ? 'text-danger' : 'text-success'}>\n            {response.status}\n          </span>\n        </div>\n        {response.meta && (\n          <div className='me-3'>\n            Time: <span id='data-time'>{response.meta.time}</span>ms\n          </div>\n        )}\n        <div className='me-3'>\n          Size:{' '}\n          <span id='data-size'>\n            {prettyBytes(JSON.stringify(response.data).length + JSON.stringify(response.headers).length)}\n          </span>\n        </div>\n      </div>\n      <APIResponseTabs response={response} />\n    </div>\n  );\n};\n\nexport default APIResponse;\n","import { useState } from 'react';\nimport { faCaretRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Collapse from 'react-bootstrap/Collapse';\nimport APIRequestForm from './APIRequestForm';\nimport APIResponse from './APIResponse';\n\nconst APIClient = () => {\n  const [open, setOpen] = useState(true);\n  const [showResponse, setShowResponse] = useState(false);\n  const [response, setResponse] = useState();\n\n  const toggleClient = () => {\n    setOpen(!open);\n  };\n\n  const handleResponse = apiResponse => {\n    setShowResponse(true);\n    setResponse(apiResponse);\n  };\n\n  return (\n    <Card className='p-3 mb-3'>\n      <Button variant='outline-dark' className='endpoint-btn' onClick={toggleClient} aria-expanded={open}>\n        <FontAwesomeIcon icon={faCaretRight} className='right-caret' />\n        <span className='mx-2'>REST Client</span>\n      </Button>\n      <Collapse in={open}>\n        <div className='px-3'>\n          <APIRequestForm onShowResponse={handleResponse} onResponse={handleResponse} />\n          {showResponse && <APIResponse response={response} />}\n        </div>\n      </Collapse>\n    </Card>\n  );\n};\n\nexport default APIClient;\n","import React from 'react';\n\nconst BodyAttrs = ({ entries }) => {\n  const rows = entries.map((row, indx) => (\n    <tr key={indx}>\n      {row.map((attr, indx) => (\n        <td key={indx}>{attr}</td>\n      ))}\n    </tr>\n  ));\n  return (\n    <table>\n      <tbody>{rows}</tbody>\n    </table>\n  );\n};\n\nconst RequestBody = ({ item }) => {\n  return (\n    <React.Fragment>\n      <dd>{item.request_body ? item.request_body : 'None'}</dd>\n      {item.request_body_format && (\n        <React.Fragment>\n          <dt>Request Body Format:</dt>\n          <dd>JSON</dd>\n          <dt>Request JSON Attributes:</dt>\n          <dd>\n            <BodyAttrs entries={item.request_body_attrs} />\n          </dd>\n          <dt>Request Body Example:</dt>\n          <dd>\n            <pre>\n              <code>{JSON.stringify(item.request_body_ex, undefined, 4)}</code>\n            </pre>\n          </dd>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default RequestBody;\n","import React from 'react';\nimport RequestBody from './RequestBody';\n\nconst Params = ({ entries }) => {\n  const rows = entries.map((row, indx) => (\n    <tr key={indx}>\n      {row.map((param, indx) => (\n        <td key={indx}>{param}</td>\n      ))}\n    </tr>\n  ));\n  return (\n    <table>\n      <tbody>{rows}</tbody>\n    </table>\n  );\n};\n\nconst Headers = ({ entries }) => {\n  const headers = entries.map((entry, indx) => <div key={indx}>{entry}</div>);\n  return headers;\n};\n\nconst RequestSection = ({ item }) => {\n  return (\n    <React.Fragment>\n      <p className='fw-bold fs-5 my-1'>Request:</p>\n      <dl className='list-unstyled mb-1'>\n        <dt>Path Parameters:</dt>\n        <dd>{item.path_params ? <Params entries={item.path_params} /> : 'None'}</dd>\n\n        {item.request_headers.length > 0 && (\n          <React.Fragment>\n            <dt>Request Headers:</dt>\n            <dd>\n              <Headers entries={item.request_headers} />\n            </dd>\n          </React.Fragment>\n        )}\n\n        <dt>Request Body:</dt>\n        <RequestBody item={item} />\n      </dl>\n    </React.Fragment>\n  );\n};\n\nexport default RequestSection;\n","import React from 'react';\n\nconst Formats = ({ entries }) => {\n  return (\n    <React.Fragment>\n      <div> Succes: None</div>\n      <div> Failure: {entries[1]}</div>\n    </React.Fragment>\n  );\n};\n\nconst Statuses = ({ entries }) => {\n  const rows = entries.map((row, indx) => (\n    <tr key={indx}>\n      {row.map((param, indx) => (\n        <td key={indx}>{param}</td>\n      ))}\n    </tr>\n  ));\n  return (\n    <table>\n      <tbody>{rows}</tbody>\n    </table>\n  );\n};\n\nconst ResponseSection = ({ item }) => {\n  return (\n    <React.Fragment>\n      <p className='fw-bold fs-5 mb-1'>Response:</p>\n      <dl className='list-unstyled mb-0'></dl>\n      <dt>Response Body Format:</dt>\n      <dd>\n        {item.response_body_format.length === 1 ? (\n          item.response_body_format[0]\n        ) : (\n          <Formats entries={item.response_body_format} />\n        )}\n      </dd>\n      <dt>Response Statuses:</dt>\n      <dd>\n        <Statuses entries={item.response_statuses} />\n      </dd>\n      {item.response_body_format.length === 1 && (\n        <React.Fragment>\n          <dt>Response Example:</dt>\n          <dd>\n            <pre>\n              <code>{JSON.stringify(item.response_body_ex, undefined, 4)}</code>\n            </pre>\n          </dd>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default ResponseSection;\n","import { useState } from 'react';\nimport { faCaretRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Collapse from 'react-bootstrap/Collapse';\nimport RequestSection from './CardSections/RequestSection';\nimport ResponseSection from './CardSections/ResponseSection';\n\nconst EndPointCard = ({ item }) => {\n  const [open, setOpen] = useState(true);\n\n  const toggleEndPointItem = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <Card className='p-3 mb-3'>\n      <Button\n        id={item.link}\n        variant='outline-dark'\n        className='endpoint-btn'\n        onClick={toggleEndPointItem}\n        aria-expanded={open}\n      >\n        <FontAwesomeIcon icon={faCaretRight} className='right-caret' />\n        <span className='mx-2'>{item.name}</span>\n      </Button>\n      <Collapse in={open}>\n        <div className='px-3'>\n          <hr />\n          <code className='endpoint fs-4'>{item.endpoint}</code>\n          <RequestSection item={item} />\n          <ResponseSection item={item} />\n        </div>\n      </Collapse>\n    </Card>\n  );\n};\n\nexport default EndPointCard;\n","import React from 'react';\nimport EndPointCard from './EndPointCard';\n\nconst EndPointCardsContainer = ({ data }) => {\n  return (\n    <React.Fragment>\n      {data.map(entry => (\n        <EndPointCard key={entry.link} item={entry} />\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport default EndPointCardsContainer;\n","import { useState } from 'react';\nimport { faCaretRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Collapse from 'react-bootstrap/Collapse';\n\nconst Attrs = ({ entries }) => {\n  const rows = entries.map((row, indx) => (\n    <tr key={indx}>\n      {row.map((attr, indx) => (\n        <td key={indx}>{attr}</td>\n      ))}\n    </tr>\n  ));\n  return (\n    <table>\n      <tbody>{rows}</tbody>\n    </table>\n  );\n};\n\nconst AttributeCard = ({ item }) => {\n  const [open, setOpen] = useState(false);\n\n  const toggleAttrItem = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <Card className='p-3 mb-3'>\n      <Button\n        id={item.link}\n        variant='outline-dark'\n        className='endpoint-btn'\n        onClick={toggleAttrItem}\n        aria-expanded={open}\n      >\n        <FontAwesomeIcon icon={faCaretRight} className='right-caret' />\n        <span className='mx-2'>{item.name}</span>\n      </Button>\n      <Collapse in={open}>\n        <div className='px-3'>\n          <hr />\n\n          <Attrs entries={item.attrs} />\n        </div>\n      </Collapse>\n    </Card>\n  );\n};\n\nexport default AttributeCard;\n","import { faCaretRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Button from 'react-bootstrap/Button';\nimport APIClient from './RESTClient/APIClient';\nimport EndPointCardsContainer from './ContentCards/EndPointCardsContainer';\nimport AttributeCard from './ContentCards/AttributeCard';\nimport { boatAttrs, boatItems } from '../data/boat-data';\nimport { cargoAttrs, cargoItems } from '../data/cargo-data';\nimport { slipAttrs, slipItems } from '../data/slip-data';\n\nconst MainContent = ({ toggleSideBar, sideBar }) => {\n  const classNames = ['bg-dark', 'w-100'];\n  if (!sideBar) {\n    classNames.push('expand');\n  }\n  return (\n    <div id='main-content' className={classNames.join(' ')}>\n      <Button id='home' variant='dark' className='fs-2' onClick={toggleSideBar}>\n        <FontAwesomeIcon id='open-icon' icon={faCaretRight} className={!sideBar ? 'closed' : ''} />\n        <span className='mx-1'>Shipyard API Documentation</span>\n      </Button>\n\n      <div className='mb-3 mx-3'>\n        <div className='mb-3'>\n          <span className='fs-4 text-light'>Register / Login: </span>\n          <a className='fs-4 api-url' href='https://shipyard-rest-api.uk.r.appspot.com'>\n            https://shipyard-rest-api.uk.r.appspot.com\n          </a>\n        </div>\n\n        <APIClient />\n\n        <h3 className='fw-thin text-white'>Boats</h3>\n        <AttributeCard item={boatAttrs} />\n        <EndPointCardsContainer data={boatItems} />\n\n        <h3 className='fw-thin text-white'>Cargo</h3>\n        <AttributeCard item={cargoAttrs} />\n        <EndPointCardsContainer data={cargoItems} />\n\n        <h3 className='fw-thin text-white'>Slips</h3>\n        <AttributeCard item={slipAttrs} />\n        <EndPointCardsContainer data={slipItems} />\n      </div>\n    </div>\n  );\n};\n\nexport default MainContent;\n","import React from 'react';\nimport SideBar from './components/SideBar/SideBar';\nimport MainContent from './components/MainContent';\n\nimport { useState } from 'react';\nimport Stack from 'react-bootstrap/Stack';\n\nconst App = props => {\n  const [showSideBar, setShowSideBar] = useState(true);\n\n  const handleToggleSideBar = () => {\n    if (showSideBar) {\n      setShowSideBar(false);\n      return;\n    }\n    setShowSideBar(true);\n  };\n\n  return (\n    <React.Fragment>\n      <Stack direction='horizontal'>\n        <SideBar show={showSideBar} />\n        <MainContent toggleSideBar={handleToggleSideBar} sideBar={showSideBar} />\n      </Stack>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}